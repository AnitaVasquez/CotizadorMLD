//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cotizador.DAL.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CotizadorEntities : DbContext
    {
        public CotizadorEntities()
            : base("name=CotizadorEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DetalleCotizacion> DetalleCotizacion { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Cotizacion> Cotizacion { get; set; }
    
        public virtual ObjectResult<ConsultarProducto> ConsultarProducto(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProducto>("ConsultarProducto", idParameter);
        }
    
        public virtual ObjectResult<ConsultarDetalleCotizacion> ConsultarDetalleCotizacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarDetalleCotizacion>("ConsultarDetalleCotizacion");
        }
    
        public virtual ObjectResult<ConsultarSecuencial> ConsultarSecuencial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarSecuencial>("ConsultarSecuencial");
        }
    }
}
